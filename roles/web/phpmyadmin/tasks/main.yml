- set_fact:
    pma_vhost_directory: "/var/www/tools/phpmyadmin"
    install_new_version: false

- name: Create phpmyadmin directory
  file: path={{ pma_vhost_directory }} state=directory

- name: check identifier
  shell: cat {{ pma_vhost_directory }}/VERSION
  ignore_errors: yes
  failed_when: false
  changed_when: false
  register: pma_version_file

- name: Check newest version when phpmyadmin_version is latest
  shell: 'curl -I -w "%{redirect_url}" -o /dev/null -s "https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-english.tar.gz" | grep -Eo "\/([0-9]+\.[0-9]+\.[0-9])\/" | cut -d "/" -f 2'
  changed_when: false
  register: latest_pma
  when: phpmyadmin_version == 'latest'

- set_fact:
    phpmyadmin_version: "{{ latest_pma.stdout }}"
  when: phpmyadmin_version == 'latest'

- set_fact:
    install_new_version: true
  when: pma_version_file.rc != 0 or pma_version_file.stdout != phpmyadmin_version

- name: Unarchive newest PMA
  unarchive:
    src: https://files.phpmyadmin.net/phpMyAdmin/{{ phpmyadmin_version }}/phpMyAdmin-{{ phpmyadmin_version }}-english.tar.gz
    dest: "/tmp"
    remote_src: yes
  when: install_new_version

- name: stat {{ pma_vhost_directory }}
  stat: path={{ pma_vhost_directory }}
  register: pma_old_stat

- name: Move {{ pma_vhost_directory }} to old
  command: mv {{ pma_vhost_directory }} {{ pma_vhost_directory }}.old
  when: pma_old_stat.stat.exists and install_new_version

- name: Move new pma
  command: mv /tmp/phpMyAdmin-{{ phpmyadmin_version }}-english {{ pma_vhost_directory }}
  when: install_new_version

- shell: echo {{ phpmyadmin_version }} > {{ pma_vhost_directory }}/VERSION
  when: install_new_version

- name: Delete old pma directory
  file: path={{ pma_vhost_directory }}.old state=absent

- name: Create phpmyadmin user
  mysql_user:
    name: "{{ phpmyadmin_mysql_control_user }}"
    password: "{{ phpmyadmin_mysql_control_password }}"
    priv: '{{ phpmyadmin_mysql_control_database }}.*:ALL'
    login_user: root
  no_log: true


- name: Check if phpmyadmin database empty
  shell: /usr/bin/mysql -Bse "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = '{{ phpmyadmin_mysql_control_database }}';"
  register: phpmyadmin_database_tables_count
  changed_when: false
  check_mode: no

- name: Create database
  mysql_db:
    name: "{{ phpmyadmin_mysql_control_database }}"
    login_user: root

- name: Import phpmyadmin schema
  shell: cat {{ pma_vhost_directory }}/sql/create_tables.sql | sed 's/USE phpmyadmin;/USE {{ phpmyadmin_mysql_control_database }};/g' | sed 's/`phpmyadmin`/`{{ phpmyadmin_mysql_control_database }}`/g' | /usr/bin/mysql -uroot {{ phpmyadmin_mysql_control_database }}
  when: phpmyadmin_database_tables_count.stdout == "0"

- name: "Make tmp path for pma"
  file: path={{ pma_vhost_directory }}/tmp state=directory

- name: "ACL for temporary dir #1"
  acl:
    path: "{{ pma_vhost_directory }}/tmp"
    entity: "{{ item }}"
    etype: user
    permissions: rwX
    default: yes
    recursive: yes
    state: present
  with_items:
    - root
    - www-data

- name: "ACL for temporary dir #2"
  acl:
    path: "{{ pma_vhost_directory }}/tmp"
    entity: "{{ item }}"
    etype: user
    permissions: rwX
    recursive: yes
    state: present
  with_items:
    - root
    - www-data

- name: phpmyadmin config
  template: src=config.inc.php-template.j2 dest={{ pma_vhost_directory }}/config.inc.php

- name: phpmyadmin nginx config
  template: src=nginx.conf-template.j2 dest=/etc/nginx/sites-enabled/pma.{{ wsl_domain_ending }}.conf
  notify: reload nginx
